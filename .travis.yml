# R for travis: see documentation at https://docs.travis-ci.com/user/languages/r

language: julia
sudo: required

notifications:
  email: false

addons:
      apt:
        sources: [ 'ubuntu-toolchain-r-test']
        packages: ['libstdc++6']

env:
  - RSTUDIO_URL: "https://download1.rstudio.org/rstudio-1.0.153-amd64-debian.tar.gz"

before_install:
# linux
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y "deb http://cran.rstudio.com/bin/linux/ubuntu $(lsb_release -s -c)/"; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get update -qq -y; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get install git r-base r-base-dev r-recommended -y; fi

  # osx
  # faster than using homebrew/science tap
  # but no permalink to release download
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then wget "https://cran.rstudio.com/bin/macosx/$(wget -qO- https://cran.rstudio.com/bin/macosx/ | sed -n 's/.*href="\(R-[^"]*.pkg\)".*/\1/p' | head -n 1)"; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then sudo installer -pkg R-*.pkg -target /; fi

  - curl -fLo /tmp/texlive.tar.gz https://github.com/jimhester/ubuntu-bin/releases/download/latest/texlive.tar.gz
  - tar xzf /tmp/texlive.tar.gz -C ~
  - export PATH=/$HOME/texlive/bin/x86_64-linux:$PATH
  - tlmgr update --self
  - curl -fLo /tmp/pandoc-1.15.2-1-amd64.deb https://github.com/jgm/pandoc/releases/download/1.15.2/pandoc-1.15.2-1-amd64.deb
  - sudo apt-get install -f
  - sudo dpkg -i /tmp/pandoc-1.15.2-1-amd64.deb
  - rm /tmp/pandoc-1.15.2-1-amd64.deb

  - curl -fLo /tmp/rstudio.deb https://download1.rstudio.org/rstudio-1.0.153-amd64.deb
  - sudo apt-get install gdebi-core
  - sudo gdebi  --non-interactive /tmp/rstudio.deb
  - rm /tmp/rstudio.deb

  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start

  - mkdir -p mkdir $HOME/R/library
  - echo 'R_LIBS_USER="~/R/library"' >  $HOME/.Renviron
  - Rscript -e 'install.packages("inline", repos="http://cran.rstudio.com/")'

  - curl -fLo /tmp/rstudio.deb https://download1.rstudio.org/rstudio-1.0.153-amd64.deb
  - sudo apt-get install gdebi-core
  - sudo gdebi  --non-interactive /tmp/rstudio.deb
  - rm /tmp/rstudio.deb
  #- wget $RSTUDIO_URL -O /tmp/rstudio.tar.gz
  #- tar -xzvf /tmp/rstudio.tar.gz -C /tmp
  #- mv /tmp/$(tar tzf /tmp/rstudio.tar.gz | head -1 | sed -e 's/\/.*//') /$HOME/rstudio
  #- export PATH=$PATH:/$HOME/rstudio/bin

  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start"
  - sleep 3 # give xvfb some time to start

  #- mkdir -p mkdir $HOME/R/library
  #- echo 'R_LIBS_USER="~/R/library"' >  $HOME/.Renviron

  #- Rscript -e 'sessionInfo()'
  #- julia -e 'versioninfo()'
  #- julia -e 'Pkg.add("RCall")'
  #- R RHOME
  #- julia -e 'println(readchomp(`R RHOME`))'
  #- julia -e 'Rhome = readchomp(`R RHOME`); libR_dir = joinpath(Rhome,"lib"); libR = joinpath(Rhome,"lib","libR.$(Libdl.dlext)"); println(Rhome); println(isdir(Rhome)); println(libR_dir); println(isdir(libR_dir)); println(libR); println(isfile(libR)); println(Libdl.dlopen_e(libR))'
  #- ls $(R RHOME)
  #- ls $(R RHOME)/lib
  #- julia -e 'using RCall'
script:
- R -e 'install.packages("remotes", repos="http://cran.rstudio.com/")'
- R -e 'remotes::install_github("Non-Contradiction/TestWithRStudio")'
- R -e "library(TestWithRStudio); stopifnot(check_rstudio())"
- R -e "library(TestWithRStudio); stopifnot(check_code_in_rstudio('1'))"
- R -e "library(TestWithRStudio); stopifnot(!check_code_in_rstudio('q()'))"
- R -e "library(TestWithRStudio); stopifnot(!check_code_in_rstudio('library(TestWithRStudio); crash()'))"
- R CMD build .
- R CMD check *tar.gz
